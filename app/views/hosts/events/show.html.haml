
- content_for :title do
  = @event.title + " | Marche イベント詳細"

- content_for :description do
  = truncate(@event.description, length: 150, omission: "...") # 説明文を150文字で切り詰め

- content_for :canonical_url do
  = request.original_url

- content_for :og_title do
  = @event.title + " | Marcheイベント"

- content_for :og_description do
  = truncate(@event.description, length: 200)

- if @event.images.attached? && @event.images.first.present?
  - content_for :og_image do
    = url_for(@event.images.first.variant(resize_to_limit: [1200, 630])) # OGP推奨サイズにリサイズ
  
%body
  = render 'header/header' # ヘッダーのパーシャルを呼び出す
  .index-btn
    %p イベント詳細ページ

  %h2= @event.title

  .event-images
    - if @event.images.attached?
      - @event.images.uniq.each do |image| # 重複を防ぐために uniq を使用
        .event-image
          = image_tag image, size: "300x200"
    - else
      .event-no-image
        = image_tag "no_image_square.jpg", class: 'event-no-image' # デフォルト画像を表示

  %table.event-details
    %tr
      %th.organizer-label 
        主催者
      %td
        - if @event&.seller.present?
          = link_to @event.seller.name, seller_path(@event.seller)
        - elsif @event&.host.present?
          = link_to @event.host.name, host_path(@event.host)
        - else
          主催者 未設定
    %tr
      %th 説明
      %td= @event.description
    %tr
      %th 開始日時
      %td= @event.start_time.present? ? @event.start_time.strftime('%Y年%-m月%-d日 %H時%M分') : '未定'
    %tr
      %th 終了日時
      %td= @event.end_time.present? ? @event.end_time.strftime('%Y年%-m月%-d日 %H時%M分') : '未定'
    %tr
      %th 都道府県
      %td= @event.venue
    %tr
      %th 住所
      %td= @event.address
    %tr
      %th 定員の目安
      %td= @event.capacity
    %tr
      %th オンライン開催
      %td= @event.is_online ? 'はい' : 'いいえ'
    %tr
      %th オンラインURL
      %td= @event.online_url
    %tr
      %th 有料イベント
      %td= @event.is_free ? '参加費用あり' : '無料'
    %tr
      %th 参加費
      %td= @event.price
    %tr
      %th 連絡先
      %td= @event.contact_info
    %tr
      %th ウェブサイト
      %td= @event.website
    %tr
      %th 動画URL
      %td= @event.video


  - if (seller_signed_in? && current_seller == @event.seller) || (host_signed_in? && current_host == @event.host)
    .edit-links
      - if host_signed_in? && current_host == @event.host
        = link_to '編集', edit_host_event_path(@event.host, @event), class: 'operation-button'
        = button_to '削除', host_event_path(@host, @event), method: :delete, data: { confirm: '本当に削除しますか？' }, class: 'button-delete'
      - elsif seller_signed_in? && current_seller == @event.seller
        = link_to '編集', edit_event_path(@event), class: 'operation-button'
        = link_to '削除', event_path(@event), data: { turbo_method: :delete, turbo_confirm: '本当に削除してもよろしいですか？' }, class: 'operation-button'


  -# - if (seller_signed_in? && current_seller == @event.seller) || (host_signed_in? && current_host == @event.host)
  -#   .edit-links
  -#     - if host_signed_in? && current_host == @event.host
  -#       = link_to '編集', edit_host_event_path(@event.host, @event), class: 'operation-button'
  -#       = link_to '削除', host_event_path(@host, @event), data: { turbo_method: :delete, turbo_confirm: '本当に削除しますか？' }, class: 'button-delete'
  -#     - elsif seller_signed_in? && current_seller == @event.seller
  -#       = link_to '編集', edit_event_path(@event), class: 'operation-button'
  -#       = link_to '削除', event_path(@event), data: { turbo_method: :delete, turbo_confirm: '本当に削除してもよろしいですか？' }, class: 'operation-button'

= link_to '戻る', events_path, class: 'operation-button'


= render 'footer/footer'